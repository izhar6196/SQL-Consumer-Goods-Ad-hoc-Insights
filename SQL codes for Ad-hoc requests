**1.  Provide the list of markets in which customer  "Atliq  Exclusive"  operates its 
business in the  APAC  region.**

SELECT distinct(market) 
FROM dim_customer
where region = "APAC" and 
customer = "Atliq Exclusive"

**2. What is the percentage of unique product increase in 2021 vs. 2020? 
The final output contains these fields, 
unique_products_2020 
unique_products_2021 
pct_change**


with unq_20 as(
SELECT 
count(distinct product_code) as unique_product_2020
from fact_sales_monthly
where fiscal_year = 2020),

unq_21 as(
SELECT 
count(distinct product_code) as unique_product_2021
from fact_sales_monthly
where fiscal_year = 2021)

select
unique_product_2020,
unique_product_2021,
round((unique_product_2021-unique_product_2020)*100/(unique_product_2020),2) as pct_change
from unq_20

**3. Provide a report with all the unique product counts for each  segment  and 
sort them in descending order of product counts. 
The final output contains 
2 fields,
segment
and product_count**

SELECT segment,
count(distinct product_code) as product_count 
FROM gdb023.dim_product
group by segment
order by product_count desc

**4.  Follow-up: Which segment had the most increase in unique products in 
2021 vs 2020? 
The final output contains these fields, 
segment
product_count_2020
product_count_2020
difference**


with count_2020 as (
SELECT s.fiscal_year, p.segment,
count(distinct p.product_code) as product_count_2020 
FROM gdb023.dim_product p
join fact_sales_monthly s
on p.product_code = s.product_code
where s.fiscal_year = 2020
group by segment
order by product_count_2020 desc), 

count_2021 as (
SELECT s.fiscal_year, p.segment,
count(distinct p.product_code) as product_count_2021 
FROM gdb023.dim_product p
join fact_sales_monthly s
on p.product_code = s.product_code
where s.fiscal_year = 2021
group by segment
order by product_count_2021 desc)

select 
C20.segment as Segment,
product_count_2020,
product_count_2021,
(product_count_2021-product_count_2020) as differnce
from count_2020 as C20
join count_2021 as C21
on C20.segment = C21.segment
order by differnce desc

**5.  Get the products that have the highest and lowest manufacturing costs. 
The final output should contain these fields, 
product_code
product 
manufacturing_cost** 

(SELECT 
p.product_code, p.product,
m.manufacturing_cost
FROM dim_product p 
join fact_manufacturing_cost m 
on p.product_code = m.product_code
order by manufacturing_cost desc
limit 1)
union
(SELECT 
p.product_code, p.product,
m.manufacturing_cost
FROM dim_product p 
join fact_manufacturing_cost m 
on p.product_code = m.product_code
order by manufacturing_cost asc
limit 1)

**6.  Generate a report which contains the top 5 customers who received an 
average high  pre_invoice_discount_pct  for the  fiscal  year 2021  and in the 
Indian  market. The final output contains these fields, 
customer_code 
customer 
average_discount_percentage** 

SELECT 
c.customer_code,
c.customer,
round(avg(pre.pre_invoice_discount_pct*100),2) as avg_discount_pct
FROM dim_customer c
join fact_pre_invoice_deductions pre 
on c.customer_code = pre.customer_code
where pre.fiscal_year = 2021 and c.market = "India"
group by c.customer_code,  customer
order by avg_discount_pct desc
limit 5;

**7.  Get the complete report of the Gross sales amount for the customer  “Atliq 
Exclusive”  for each month  .  This analysis helps to  get an idea of low and 
high-performing months and take strategic decisions. 
The final report contains these columns,
Month 
Year 
Gross sales Amount**


select month,
fiscal_year,
Gross_sales_amount 
FROM
(SELECT 
monthname(s.date)as month, 
month(date_add(s.date, interval 4 month)) as month_number,
s.fiscal_year,
concat(round(sum(g.gross_price*s.sold_quantity)/1000000,2),"M") as Gross_sales_amount
FROM fact_sales_monthly s
   join fact_gross_price g 
on s.product_code = g.product_code and s.fiscal_year = g.fiscal_year
   join dim_customer c
on s.customer_code = c.customer_code
   where customer = "Atliq Exclusive"
group by month,fiscal_year
order by  fiscal_year, month_number) Gross_sales_Atliq

**8.  In which quarter of 2020, got the maximum total_sold_quantity? The final 
output contains these fields sorted by the total_sold_quantity, 
Quarter 
total_sold_quantity** 


with cte as(
SELECT 
quaters(date) as quaters,
fiscal_year,
sum(sold_quantity) as total_sold_quantity
FROM 
fact_sales_monthly
where fiscal_year = 2020
group by  quaters)

select 
quaters, 
round((total_sold_quantity/1000000),2) 
as total_sold_quantity_mln 
from cte

**9. Which channel helped to bring more gross sales in the fiscal year 2021 
and the percentage of contribution?  The final output  contains these fields, 
channel 
gross_sales_mln 
percentage** 


with X as(
SELECT 
c.channel,
round(sum((s.sold_quantity*g.gross_price)/(1000000)),2) as gross_sales_mln
FROM fact_sales_monthly s
join dim_customer c 
on c.customer_code = s.customer_code
join fact_gross_price g 
on g.product_code = s.product_code 
where s.fiscal_year = 2021 and g.fiscal_year = s.fiscal_year
group by c.channel)

select *, 
round((gross_sales_mln)*100/sum(gross_sales_mln) over(),2)  as pct
from X
order by gross_sales_mln desc

**10.  Get the Top 3 products in each division that have a high 
total_sold_quantity in the fiscal_year 2021? The final output contains these 
fields, 
division 
product_code 
product 
total_sold_quantity 
rank_order** 


with cte1 as(
SELECT 
p.division,
p.product_code, 
p.product, p.variant,
sum(s.sold_quantity)as total_sold_quantity
FROM fact_sales_monthly s 
join dim_product p 
on p.product_code = s.product_code
where fiscal_year = 2021
group by  product_code, product),
cte2 as(
select *, 
dense_rank() over(partition by division order by total_sold_quantity desc) as rnk_order
 from cte1)
select * from cte2 
where rnk_order <=3
